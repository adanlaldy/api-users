  openapi: 3.0.0
  info:
    title: API users
    version: 2.0.0
  servers:
    - url: http://localhost:3001/v1
  paths:
    /users/register:
      post:
        summary: Create a new user
        tags:
          - User
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  firstName:
                    type: string
                    example: "john"
                  lastName:
                    type: string
                    example: "doe"
                  birthDate:
                    type: string
                    example: "1990-05-25"
                  email:
                    type: string
                    example: "john@doe.com"
                  password:
                    type: string
                    example: "Azerty123."
                  role:
                    type: string
                    example: "admin"
        responses:
          '201':
            description: User created
          '400':
            description: Bad request
          '500':
            description: Internal server error
    /users/login:
      post:
        summary: Login user
        tags:
          - User
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: "john@doe.com"
                  password:
                    type: string
                    example: "Azerty123."
        responses:
          '200':
            description: User logged in
          '400':
            description: Bad request
          '500':
            description: Internal server error
    /users:
      get:
        summary: Get all users
        tags:
          - User
        responses:
          '200':
            description: A list of users
          '500':
            description: Internal server error
    /users/me:
      get:
        summary: Get user by token
        tags:
          - User
        responses:
          '200':
            description: User found
          401:
            description: Unauthorized
          '500':
            description: Internal server error
    /users/{id}:
      get:
        summary: Get user by id
        tags:
          - User
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: User found
          '500':
            description: Internal server error
      delete:
        summary: Delete user by id
        tags:
          - User
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: User deleted
          '401':
            description: Unauthorized
          '500':
            description: Internal server error
    /users/update/{id}:
      put:
        summary: Update user by id
        tags:
          - User
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  firstName:
                    type: string
                  lastName:
                    type: string
                  birthDate:
                    format: date-time
                    example: "2025-05-16T00:00:00.000Z"
                  email:
                    type: string
                  password:
                    type: string
                  picture:
                    type: string
                  balance:
                    type: number
                  role:
                    type: string
        responses:
          '200':
            description: User updated
          '401':
            description: Unauthorized
          '500':
            description: Internal server error
    /users/logout:
      delete:
        summary: Logout user
        tags:
          - User
        responses:
          '200':
            description: User logged out
          '500':
            description: Internal server error
    /purchases:
      get:
        summary: Get all purchases
        description: Retrieve all purchases made by users.
        tags:
          - Purchases
        responses:
          '200':
            description: List of all purchases.
          '500':
            description: Internal server error.
      post:
        summary: Create purchase
        description: Create a new purchase record.
        tags:
          - Purchases
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                required:
                  - finalPrice
                  - auctionId
                  - userId
                properties:
                  finalPrice:
                    type: number
                    example: 123
                  auctionId:
                    type: integer
                    example: 1
                  userId:
                    type: integer
                    example: 2
        responses:
          '201':
            description: Purchase created successfully.
          '400':
            description: Invalid input data.
          '500':
            description: Internal server error.

    /purchases/user/{userId}:
      get:
        summary: Get purchases by user id
        description: Retrieve all purchases made by a specific user.
        tags:
          - Purchases
        parameters:
          - name: userId
            in: path
            required: true
            schema:
              type: integer
              example: 2
            description: Numeric ID of the user.
        responses:
          '200':
            description: List of purchases by the specified user.
          '404':
            description: User not found.
          '500':
            description: Internal server error.

    /messages/send:
      post:
        summary: Create message
        description: Send a new message in a conversation.
        tags:
          - Messages
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                required:
                  - content
                  - conversationId
                properties:
                  content:
                    type: string
                    example: "mon deuxi√®me message"
                  conversationId:
                    type: integer
                    example: 6
        responses:
          '201':
            description: Message sent successfully.
          '400':
            description: Invalid input.
          '500':
            description: Internal server error.

    /messages/conversation/{conversationId}:
      get:
        summary: Get messages by conversation id
        description: Retrieve all messages from a specific conversation.
        tags:
          - Messages
        parameters:
          - name: conversationId
            in: path
            required: true
            schema:
              type: integer
              example: 6
            description: ID of the conversation.
        responses:
          '200':
            description: List of messages in the conversation.
          '404':
            description: Conversation not found.
          '500':
            description: Internal server error.

    /notifications:
      post:
        summary: Create notification
        description: Create a new notification related to an auction or message.
        tags:
          - Notifications
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                required:
                  - content
                  - auctionId
                  - userId
                  - messageId
                properties:
                  content:
                    type: string
                    example: "je suis un contenu"
                  auctionId:
                    type: integer
                    example: 1
                  userId:
                    type: integer
                    example: 2
                  messageId:
                    type: integer
                    example: 3
        responses:
          '201':
            description: Notification created successfully.
          '400':
            description: Invalid input data.
          '500':
            description: Internal server error.

    /notifications/user/{userId}:
      get:
        summary: Get notifications by user id
        description: Retrieve all notifications for a specific user.
        tags:
          - Notifications
        parameters:
          - name: userId
            in: path
            required: true
            schema:
              type: integer
              example: 2
            description: Numeric ID of the user.
        responses:
          '200':
            description: List of notifications for the user.
          '404':
            description: User not found.
          '500':
            description: Internal server error.

    /notifications/{id}:
      delete:
        summary: Delete notification by id
        description: Delete a specific notification by its ID.
        tags:
          - Notifications
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              example: 1
            description: Numeric ID of the notification.
        responses:
          '204':
            description: Notification deleted successfully.
          '404':
            description: Notification not found.
          '500':
            description: Internal server error.

    /likes:
      post:
        summary: Create like
        description: Add a like to an auction by a user.
        tags:
          - Likes
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                required:
                  - userId
                  - auctionId
                properties:
                  userId:
                    type: integer
                    example: 2
                  auctionId:
                    type: integer
                    example: 1
        responses:
          '201':
            description: Like created successfully.
          '400':
            description: Invalid input data.
          '500':
            description: Internal server error.

    /likes/{id}:
      delete:
        summary: Delete like by id
        description: Remove a like by its ID.
        tags:
          - Likes
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              example: 5
            description: Numeric ID of the like to delete.
        responses:
          '204':
            description: Like deleted successfully.
          '404':
            description: Like not found.
          '500':
            description: Internal server error.

    /conversations:
      post:
        summary: Create conversation
        description: Start a new conversation between two users.
        tags:
          - Conversations
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                required:
                  - user1Id
                  - user2Id
                properties:
                  user1Id:
                    type: integer
                    example: 2
                  user2Id:
                    type: integer
                    example: 4
        responses:
          '201':
            description: Conversation created successfully.
          '400':
            description: Invalid input data.
          '500':
            description: Internal server error.